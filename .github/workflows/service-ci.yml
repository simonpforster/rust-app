name: Service CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  Rust-build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Check
        run: cargo check --workspace

      - name: Run tests
        run: cargo test --package service

  Docker-image-build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the repo
        uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ./service/Dockerfile
          push: false

  Functional-test:
    needs: [ Rust-build, Docker-image-build ]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the repo
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: docker/setup-buildx-action@v3

      - name: Run docker compose
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./docker-compose-stubbed.yaml"

      - name: Run functional test
        run: cargo test --package functional-test

  Load-test:
    needs: [ Functional-test ]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the repo
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: docker/setup-buildx-action@v3

      - name: Run docker compose
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./docker-compose-stubbed.yaml"

      - name: Run functional test
        run: cargo run --bin load-test

      - uses: actions/upload-artifact@v4
        with:
          name: Load test report
          path: "./target/loadtest_report.html"

  Docker-image-push:
    if: success() && github.ref == 'refs/heads/master'
    needs: [ Rust-build, Docker-image-build, Functional-test, Load-test ]
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: simonpforster/rust-app
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr

      - name: Date
        run: echo "TIME=${{ github.event.repository.updated_at}}" | sed 's/:/./g' >> $GITHUB_ENV

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ./service/Dockerfile
          push: true
          tags: "${{ steps.meta.outputs.tags }}"
          labels: ${{ steps.meta.outputs.labels }}